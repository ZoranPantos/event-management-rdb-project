SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

CREATE SCHEMA IF NOT EXISTS `event_management` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;
USE `event_management` ;

CREATE TABLE IF NOT EXISTS `event_management`.`USER` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `FirstName` VARCHAR(20) NOT NULL,
  `LastName` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`SUPER_ADMIN` (
  `USER_Id` INT NOT NULL,
  PRIMARY KEY (`USER_Id`),
  CONSTRAINT `fk_SUPER_ADMIN_USER`
    FOREIGN KEY (`USER_Id`)
    REFERENCES `event_management`.`USER` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`REGULAR_USER` (
  `USER_Id` INT NOT NULL,
  `Interests` TEXT NOT NULL,
  `Age` INT(2) NOT NULL,
  `MemberSince` DATE NOT NULL,
  `IsSuspended` TINYINT NOT NULL,
  PRIMARY KEY (`USER_Id`),
  CONSTRAINT `fk_REGULAR_USER_USER1`
    FOREIGN KEY (`USER_Id`)
    REFERENCES `event_management`.`USER` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`TELEPHONE` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `TelephoneNumber` VARCHAR(20) NOT NULL,
  `REGULAR_USER_USER_Id` INT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_TELEPHONE_REGULAR_USER1_idx` (`REGULAR_USER_USER_Id` ASC) VISIBLE,
  CONSTRAINT `fk_TELEPHONE_REGULAR_USER1`
    FOREIGN KEY (`REGULAR_USER_USER_Id`)
    REFERENCES `event_management`.`REGULAR_USER` (`USER_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`VENUE` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `FullName` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`GROUP` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(50) NOT NULL,
  `Description` TEXT NOT NULL,
  `IsPublic` TINYINT NOT NULL,
  `MemberCount` INT NOT NULL,
  `IsSuspended` TINYINT NOT NULL,
  `REGULAR_USER_USER_Id` INT NOT NULL,
  `VENUE_Id` INT NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_GROUP_REGULAR_USER1_idx` (`REGULAR_USER_USER_Id` ASC) VISIBLE,
  INDEX `fk_GROUP_VENUE1_idx` (`VENUE_Id` ASC) VISIBLE,
  CONSTRAINT `fk_GROUP_REGULAR_USER1`
    FOREIGN KEY (`REGULAR_USER_USER_Id`)
    REFERENCES `event_management`.`REGULAR_USER` (`USER_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_GROUP_VENUE1`
    FOREIGN KEY (`VENUE_Id`)
    REFERENCES `event_management`.`VENUE` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`REGISTERS` (
  `REGULAR_USER_USER_Id` INT NOT NULL,
  `GROUP_Id` INT NOT NULL,
  PRIMARY KEY (`REGULAR_USER_USER_Id`, `GROUP_Id`),
  INDEX `fk_REGULAR_USER_has_GROUP_GROUP1_idx` (`GROUP_Id` ASC) VISIBLE,
  INDEX `fk_REGULAR_USER_has_GROUP_REGULAR_USER1_idx` (`REGULAR_USER_USER_Id` ASC) VISIBLE,
  CONSTRAINT `fk_REGULAR_USER_has_GROUP_REGULAR_USER1`
    FOREIGN KEY (`REGULAR_USER_USER_Id`)
    REFERENCES `event_management`.`REGULAR_USER` (`USER_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_REGULAR_USER_has_GROUP_GROUP1`
    FOREIGN KEY (`GROUP_Id`)
    REFERENCES `event_management`.`GROUP` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`FORUM` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Discussions` TEXT NULL,
  `GROUP_Id` INT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_FORUM_GROUP1_idx` (`GROUP_Id` ASC) VISIBLE,
  CONSTRAINT `fk_FORUM_GROUP1`
    FOREIGN KEY (`GROUP_Id`)
    REFERENCES `event_management`.`GROUP` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`CREATES_DISCUSSION` (
  `REGULAR_USER_USER_Id` INT NOT NULL,
  `FORUM_Id` INT NOT NULL,
  PRIMARY KEY (`REGULAR_USER_USER_Id`, `FORUM_Id`),
  INDEX `fk_REGULAR_USER_has_FORUM_FORUM1_idx` (`FORUM_Id` ASC) VISIBLE,
  INDEX `fk_REGULAR_USER_has_FORUM_REGULAR_USER1_idx` (`REGULAR_USER_USER_Id` ASC) VISIBLE,
  CONSTRAINT `fk_REGULAR_USER_has_FORUM_REGULAR_USER1`
    FOREIGN KEY (`REGULAR_USER_USER_Id`)
    REFERENCES `event_management`.`REGULAR_USER` (`USER_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_REGULAR_USER_has_FORUM_FORUM1`
    FOREIGN KEY (`FORUM_Id`)
    REFERENCES `event_management`.`FORUM` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`LOCATION` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `City` VARCHAR(20) NOT NULL,
  `Street` VARCHAR(50) NOT NULL,
  `Number` INT NOT NULL,
  `Latitude` DECIMAL(16,14) NULL,
  `Longitude` DECIMAL(16,14) NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`EVENT` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Date` DATE NOT NULL,
  `Title` VARCHAR(50) NOT NULL,
  `Description` TEXT NOT NULL,
  `DailySchedule` TEXT NULL,
  `IsRecurring` TINYINT NOT NULL,
  `IsOpen` TINYINT NOT NULL,
  `IsSuspended` TINYINT NOT NULL,
  `LOCATION_Id` INT NOT NULL,
  PRIMARY KEY (`Id`),
  INDEX `fk_EVENT_LOCATION1_idx` (`LOCATION_Id` ASC) VISIBLE,
  CONSTRAINT `fk_EVENT_LOCATION1`
    FOREIGN KEY (`LOCATION_Id`)
    REFERENCES `event_management`.`LOCATION` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`ORGANIZES` (
  `EVENT_Id` INT NOT NULL,
  `GROUP_Id` INT NOT NULL,
  PRIMARY KEY (`EVENT_Id`, `GROUP_Id`),
  INDEX `fk_EVENT_has_GROUP_GROUP1_idx` (`GROUP_Id` ASC) VISIBLE,
  INDEX `fk_EVENT_has_GROUP_EVENT1_idx` (`EVENT_Id` ASC) VISIBLE,
  CONSTRAINT `fk_EVENT_has_GROUP_EVENT1`
    FOREIGN KEY (`EVENT_Id`)
    REFERENCES `event_management`.`EVENT` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_EVENT_has_GROUP_GROUP1`
    FOREIGN KEY (`GROUP_Id`)
    REFERENCES `event_management`.`GROUP` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`APPLIES_TO` (
  `REGULAR_USER_USER_Id` INT NOT NULL,
  `EVENT_Id` INT NOT NULL,
  PRIMARY KEY (`REGULAR_USER_USER_Id`, `EVENT_Id`),
  INDEX `fk_REGULAR_USER_has_EVENT_EVENT1_idx` (`EVENT_Id` ASC) VISIBLE,
  INDEX `fk_REGULAR_USER_has_EVENT_REGULAR_USER1_idx` (`REGULAR_USER_USER_Id` ASC) VISIBLE,
  CONSTRAINT `fk_REGULAR_USER_has_EVENT_REGULAR_USER1`
    FOREIGN KEY (`REGULAR_USER_USER_Id`)
    REFERENCES `event_management`.`REGULAR_USER` (`USER_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_REGULAR_USER_has_EVENT_EVENT1`
    FOREIGN KEY (`EVENT_Id`)
    REFERENCES `event_management`.`EVENT` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`TOPIC` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(50) NOT NULL,
  `Description` TEXT NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`HAS` (
  `EVENT_Id` INT NOT NULL,
  `TOPIC_Id` INT NOT NULL,
  PRIMARY KEY (`EVENT_Id`, `TOPIC_Id`),
  INDEX `fk_EVENT_has_TOPIC_TOPIC1_idx` (`TOPIC_Id` ASC) VISIBLE,
  INDEX `fk_EVENT_has_TOPIC_EVENT1_idx` (`EVENT_Id` ASC) VISIBLE,
  CONSTRAINT `fk_EVENT_has_TOPIC_EVENT1`
    FOREIGN KEY (`EVENT_Id`)
    REFERENCES `event_management`.`EVENT` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_EVENT_has_TOPIC_TOPIC1`
    FOREIGN KEY (`TOPIC_Id`)
    REFERENCES `event_management`.`TOPIC` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`SPONSOR` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(30) NOT NULL,
  `DomainOfWork` VARCHAR(100) NOT NULL,
  `CurrentCEO` VARCHAR(45) NULL,
  `EstablishmentYear` INT NOT NULL,
  `Headquarters` VARCHAR(45) NOT NULL,
  `Motto` VARCHAR(100) NULL,
  `ContactMail` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`SPONSORS` (
  `SPONSOR_Id` INT NOT NULL,
  `EVENT_Id` INT NOT NULL,
  `MoneyProvided` DECIMAL NOT NULL,
  PRIMARY KEY (`SPONSOR_Id`, `EVENT_Id`),
  INDEX `fk_SPONSOR_has_EVENT_EVENT1_idx` (`EVENT_Id` ASC) VISIBLE,
  INDEX `fk_SPONSOR_has_EVENT_SPONSOR1_idx` (`SPONSOR_Id` ASC) VISIBLE,
  CONSTRAINT `fk_SPONSOR_has_EVENT_SPONSOR1`
    FOREIGN KEY (`SPONSOR_Id`)
    REFERENCES `event_management`.`SPONSOR` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SPONSOR_has_EVENT_EVENT1`
    FOREIGN KEY (`EVENT_Id`)
    REFERENCES `event_management`.`EVENT` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `event_management`.`SUSPENDS` (
  `SUPER_ADMIN_USER_Id` INT NOT NULL,
  `REGULAR_USER_USER_Id` INT NOT NULL,
  `DateSuspended` DATE NOT NULL,
  PRIMARY KEY (`REGULAR_USER_USER_Id`),
  INDEX `fk_SUPER_ADMIN_has_REGULAR_USER_REGULAR_USER1_idx` (`REGULAR_USER_USER_Id` ASC) VISIBLE,
  INDEX `fk_SUPER_ADMIN_has_REGULAR_USER_SUPER_ADMIN1_idx` (`SUPER_ADMIN_USER_Id` ASC) VISIBLE,
  CONSTRAINT `fk_SUPER_ADMIN_has_REGULAR_USER_SUPER_ADMIN1`
    FOREIGN KEY (`SUPER_ADMIN_USER_Id`)
    REFERENCES `event_management`.`SUPER_ADMIN` (`USER_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SUPER_ADMIN_has_REGULAR_USER_REGULAR_USER1`
    FOREIGN KEY (`REGULAR_USER_USER_Id`)
    REFERENCES `event_management`.`REGULAR_USER` (`USER_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;